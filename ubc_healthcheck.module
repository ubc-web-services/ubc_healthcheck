<?php

/*
	@author UCB IT WebServices, May 28th 2015
	
	This is a basic health check page that is monitored by SCOM.
	
	Checks if the database is reachable and we can run a query.
	Checks if the default Drupal files folder is reachable and writeable.
	Checks if a CLF theme is installed and checks for CLF CDN assets.
	
	SCOM checks for the STATUS_OK string to be present in the page.
	The STATUS_OK string is included only if all health checks pass.
	
*/

define('STATUS_OK', 	'<!-- SCOM HEALTH CHECK STATUS OK -->');
define('STATUS_ERR', 	'<!-- SCOM HEALTH CHECK STATUS ERR -->');
define('CLF_ASSET_URL', 'http://cdn.ubc.ca/clf/7.0.4/js/ubc-clf.min.js');

/*
 * Implements hook_menu
 */
function ubc_healthcheck_menu() {

	$items['healthcheck/scom'] = array(
		'title' => 'UBC HealthCheck for SCOM',
		'description' => 'A page for SCOM to test the status of a site',
		'page callback' => 'ubc_healthcheck_scom',
		'access arguments' => array('access content'),
	);
	$items['healthcheck/host'] = array(
		'title' => 'Host',
		'description' => 'A page to verify the hosting environment',
		'page callback' => 'ubc_healthcheck_host',
		'access arguments' => array('access content'),
	);
	return $items;
}

function ubc_healthcheck_host() {

	if (getenv('BASE_URL') != FALSE) {
		return "<h3>Hosted on Platform.sh</h3>";
	}
	else {
		return "<h3>Hosted at UBC</h3>";
	}
}	

/*
 * Performs health checks and returns page html
 */
function ubc_healthcheck_scom() {

  	# do not track this script via New Relic
  	if(extension_loaded('newrelic')) {
	  newrelic_ignore_transaction();
	  newrelic_disable_autorum();
	}

	$start = microtime();

	# we never want to cache the results of the check
	drupal_page_is_cacheable(FALSE);

	$db_status = _ubc_healthcheck_getDBStatus();
	$files_status = _ubc_healthcheck_getFilesStatus();
	$theme_status = _ubc_healthcheck_getThemeStatus();

	# do other types of status checks here
	
	$html = '<div id="statuses">';
	$html .= _ubc_healthcheck_setDBStatusHTML($db_status);
	$html .= _ubc_healthcheck_setFileStatusHTML($files_status);
	$html .= _ubc_healthcheck_setThemeStatus($theme_status);
	$html .= '</div>';

	$end = microtime();
	$html .= _ubc_healtcheck_insertTimerString($start, $end);

	$html .= _ubc_healthcheck_insertStatusString(array($db_status, $files_status, $theme_status));
	return $html;

}

/*
 * Test the DB connection by querying the node table
 */
function _ubc_healthcheck_getDBStatus() {

	try {
	  $result = db_query('SELECT COUNT(nid) AS ok FROM {node}')->fetch();
	  return $result->ok;
	}
	catch (Exception $e) {
		return $e;
	}
	return FALSE;
}

/* 
 * Return the status of the DB connection test
 * @return $html string
 */
function _ubc_healthcheck_setDBStatusHTML(&$db_status) {

	$html  = '<h3>DB Connection:</h3>';
	if(is_numeric($db_status)) {
		$html .= '<div class="check-ok">Connected</div>';
	}
	elseif(is_object($db_status)) {
		$html .= '<div class="check-down">PDOException</div>';
	}
	else {
		$html .= '<div class="check-down">Error</div>';
	}
	return $html;
}

/*
 * Test the File system
 */
function _ubc_healthcheck_getFilesStatus() {

  try {  
  	$files_path = variable_get('file_public_path', conf_path() . '/files');
  	if(is_writable($files_path)) {
			return 1;  	
  	}
  }
  catch(Exception $e) {
    return $e;
  }
  return FALSE;
}

/* 
 * Return the status of the File directory test
 * @return $html string
 */
function _ubc_healthcheck_setFileStatusHTML(&$files_status) {

	$html  = '<h3>File System:</h3>';
	if(is_numeric($files_status)) {
		$html .= '<div class="check-ok">Writeable</div>';
	}
	elseif(is_object($files_status)) {
		$html .= '<div class="check-down">Exception</div>';
	}
	else {
		$html .= '<div class="check-down">Error</div>';
	}
	return $html;
}

/*
 * Checks if CLF is enabled and if CDN assets are available
 */
function _ubc_healthcheck_getThemeStatus() {

  try {  
  	$themes = list_themes(TRUE);
	if(array_key_exists('megatron', $themes)) {
	  if($themes['megatron']->status == 1) {
	    return _ubc_healthcheck_megatronStatus();
	  }
	}
	return -1;

  }
  catch(Exception $e) {
    return $e;
  }
  return FALSE;
}

/*
 * Return the status of the CLF Theme asset test
 * @return $html string
 */
function _ubc_healthcheck_setThemeStatus(&$theme_status) {

	$html  = '<h3>CLF THEME:</h3>';
	if(is_numeric($theme_status)) {
	  if($theme_status == 1) $html .= '<div class="check-ok">CLF Assets Available</div>';
      if($theme_status == -1) $html .= '<div class="check-ok">CLF Theme Not Installed</div>';
	}
	elseif(is_object($theme_status)) {
		$html .= '<div class="check-down">Exception</div>';
	}
	else {
		$html .= '<div class="check-down">Error</div>';
	}
	return $html;
}

/*
 * Performs a curl request to see if CDN assets are reachable
 */
function _ubc_healthcheck_megatronStatus() {

  $curl = curl_init(CLF_ASSET_URL);
  curl_setopt($curl, CURLOPT_NOBODY, true);

  $result = curl_exec($curl);
  $ret = false;

  if($result !== false) {
    $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE);  

      if($statusCode == 200) {
        $ret = 1;
      }
  }

  curl_close($curl);
  return $ret;  
}

/* 
 * Calculates script execution time
 */
function _ubc_healtcheck_insertTimerString($start, $end) {

	$total = $end - $start;
	return '<h4>Total Execution Time</h4><div>'.$total.' s</div>';
}

/*
 * Test all status checks and return SCOM status string
 */
function _ubc_healthcheck_insertStatusString($status_array) {

	foreach($status_array as $status) {
		if(!is_numeric($status)) return STATUS_ERR;
	}
	return STATUS_OK;
}